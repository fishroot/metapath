# MetaPath scenario

[network1]
# BCAT1,PDHA1-Full+TF
file = ./network/test/test1.ini

[network2]
# BCAT1,PDHA1+TF
file = ./network/test/test2.ini

[network3]
# BCAT1,PDHA1-Generic
file = ./network/test/test3.ini

[network4]
# Smalltest
file = ./network/test/test4.ini

[network5]
# Smallest
file = ./network/test/test5.ini

[dataset1]
name = TCGA-normal
file = ./data/GBM/tcga_normal.txt
file_options:
  delimiter_ascii = 9,
  data_type = 'float',
  include_labels = 'yes',
  label_format = 'hgu133a'
preprocessing:
  normalize = 'none'

[dataset2]
name = TCGA-GBM-wt
file = ./data/GBM/tcga_gbm_wt.txt
file_options:
  delimiter_ascii = 9,
  data_type = 'float',
  include_labels = 'yes',
  label_format = 'hgu133a'
preprocessing:
  normalize = 'none'

[dataset3]
name = TCGA-GBM-mut
file = ./data/GBM/tcga_gbm_mut.txt
file_options:
  delimiter_ascii = 9,
  data_type = 'float',
  include_labels = 'yes',
  label_format = 'hgu133a'
preprocessing:
  normalize = 'none'

[dataset4]
name = TCGA-all
file = ./data/GBM/tcga_all.txt
file_options:
  delimiter_ascii = 9,
  data_type = 'float',
  include_labels = 'yes',
  label_format = 'hgu133a'
preprocessing:
  normalize = 'none'

[model1]
name = GRBM
description:
  RBM with gaussian visible units, see: 
  "Improved Learning of Gaussian-Bernoulli Restricted Boltzmann Machines", 
  KyungHyun Cho, Alexander Ilin and Tapani Raiko, ICANN 2011
class = GRBM
init:
  std_dev = 0.25,
  weight_distribution = 0.01

[schedule1]
name = normalize
iterations = 1
stage_1:
  updates = 200000,
  update_rate = 0.0001,
  update_factor_vbias = 0.1,
  update_factor_hbias = 0.1,
  update_factor_vlvar = 0.01,
  sampling_algorithm = 'cd',
  selection = 'last'

[analyse1]
name = all
network_file = yes
model_file = all
model_plot = single
model_weight_scale = 30
model_evolution_video = no
model_evulotion_error = no
model_evolution_energy = no
plot_points = 200
report:
  include = 'yes'
model_graph_plot:
  include = 'yes',
  dpi = 300,
  file_ext = 'png',
  edge_threshold = 0.0,
  edge_zoom = 5
model_knockout_plot:
  include = 'yes',
  dpi = 300,
  file_ext = 'png',
  interpolation = 'nearest'
network_graph_plot:
  include = 'yes',
  dpi = 300,
  file_ext = 'png'
dataset_correlation_plot:
  include = 'yes',
  dpi = 300,
  file_ext = 'png',
  interpolation = 'nearest'

[analyse2]
name = model_weights
model_graph_plot:
  include = 'yes',
  dpi = 300,
  file_ext = 'png',
  node_caption = 'rel_approx',
  edge_weight = 'weights',
  edge_threshold = 0.0,
  edge_zoom = 5

[analyse3]
name = model_link_energy
model_graph_plot:
  include = 'yes',
  dpi = 300,
  file_ext = 'png',
  node_caption = 'rel_approx',
  edge_weight = 'link_energy',
  edge_threshold = 0.0,
  edge_zoom = 5

[analyse4]
name = model_report
report:
  include = 'yes'

[analyse5]
name = network
network_graph_plot:
  include = 'yes',
  dpi = 300,
  file_ext = 'png'

[analyse6]
name = dataset
dataset_correlation_plot:
  include = 'yes',
  dpi = 300,
  file_ext = 'png',
  interpolation = 'nearest'

[analyse7]
name = knockout
model_knockout_plot:
  include = 'yes',
  dpi = 300,
  file_ext = 'png',
  interpolation = 'nearest'

[analyse8]
name = model_weights_abs_approx
model_graph_plot:
  include = 'yes',
  dpi = 300,
  file_ext = 'png',
  node_caption = 'abs_approx',
  edge_weight = 'weights',
  edge_threshold = 0.0,
  edge_zoom = 5

[analyse9]
name = model_link_energy_abs_approx
model_graph_plot:
  include = 'yes',
  dpi = 300,
  file_ext = 'png',
  node_caption = 'abs_approx',
  edge_weight = 'link_energy',
  edge_threshold = 0.0,
  edge_zoom = 5